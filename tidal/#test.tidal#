d1 $ slow 4 $
  stack [sound "cp [~ ~ arpy] bd*2 ~"
         ]
  # nudge "0.04"

  

loopTime t p =

 import Sound.Tidal.Utils

let loopFirst p = Pattern f
      where f a@(s,e) = mapSnds' (mapArc (+ (sam s))) $ mapFsts' (mapArc (+ (sam s))) $ arc p (mapArc (subtract (sam s)) a)



let s = 4.1
    e = 4.5

let p = Pattern $ \(s,e) -> arc (slow 4 $ run 4) (mapArc (subtract (sam s)) (s,e)) 

density 2 $ p

subtract (sam 3.3) (3.3)

density 3 $ loopFirst "[1 2 3]/3"

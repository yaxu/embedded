d1 $ slow 4 $
  stack [sound "cp [~ ~ arpy] bd*2 ~"
         ]
  # nudge "0.04"

  

loopTime t p =

 import Sound.Tidal.Utils

let loopFirst p = Pattern f
      where f a@(s,e) = splitQumapSnds' (mapArc (+ (sam s))) $ mapFsts' (mapArc (+ (sam s))) $ arc p (mapArc (subtract (sam s)) a)

subtract (sam 3.3) (3.3)

density 3 $ loopFirst "[1 2 3]/3"

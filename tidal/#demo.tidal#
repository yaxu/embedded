-- Combine with self denser

d1 $ superimpose (density 1.5) $ sound "bd mt sn lt"

-- Combine with self shifted

d1 $ every 2 (superimpose (0.25 <~)) $ sound "bd mt*3 sn*2 lt"

-- Density step

d1 $ every 4 (density 1.5) $ sound "bd mt*3 sn*2 lt"

-- Beat rotation

d1 $ every 4 (0.25 <~) $ sound "bd mt*3 sn*2 lt"

d1 $ foldEvery [3,5] (0.25 <~) $ sound "bd mt*3 sn*2 lt"

d1 $ every 4 ((0.25) ~>) (sound "bd sn*2 mt lt ~ sn:2 mt lt")

-- step through different densities, reversals etc

d1 $ slowspread ($) [density 1.5, slow 2] $ sound "bd mt*3 sn*2 lt"

-- Step through sections

d1 $ runWith 4 (density 2) $ sound "bd mt*2 sn*2 [lt mt]"

d1 $ slow 2 $ runWith 3 (density 2) $ sound "bd sn ht bd sn mt bd sn lt"

d1 $ slow 2 $ runWith 3 (# speed "2") $ sound "bd sn ht bd sn mt bd sn lt"

d1 $ slow 2 $ sound "bd sn ht bd sn mt bd sn lt" # speed (runWith 3 (density 2) "1 1.5 2 3") -- can also be applied to effect parameters, seems buggy but interesting

-- Weave parameters across patterns

d1 $ weave 4 (speed (scale 1 2 sine1) # pan sine1)
  [sound "bd sn",
   sound "jvbass jvbass:1 jvbass:3",
   sound "bd*2 sn:2"
  ]

-- Weave patterns across parameters

d1 $ weave 4 (sound "jvbass jvbass:1 jvbass:3 jvbass:4")
  [speed "2 0.5 1",
   speed "1 3 2*2 1",
   shape "0 0.8 0.2 0.9"
  ]

-- Restructing patterns

d1 $ struct "x*2 x*3" $ n (run 8) # s "arpy"

d1 $ every 3 (struct "x*2 x*3") $ n (run 8) # s "arpy"

-- Structures within structures
--  (each 'x' stands for the pattern given on the right)

d1 $ slow 2 $ substruct "x [~ x/2] x ~" $ sound "bd sn sn:2 ~"

-- Transitions
-- http://tidalcycles.org/functions.html#transitions

t1 (histpan 4) $ iter 4 $ rev $ sound "[drum:3 drum] jvbass:2*2 [~ mt:8] sd8:2"

-- Swap a whole pattern with another using const

d1 $ every 4 (const $ sound "cp") $ foldEvery [3,7] (0.25 <~) $ sound "drum [~ sn] sn:2*2 [~ mt] lt*3 ht lt mt"

-- Clapping music
d1 $ now ~> (do x <- slow (12 * 12) $ run 12
                jux ((x/12) <~) $ sound "cp ! ! ~ cp ! ~ cp ~ cp ! ~"
            )

-- Phase music
m1 $ slow 2 $ superimpose (slow 1.01) $ n "e4 fs4 b4 cs5 d5 fs4 e4 cs5 b4 fs4 d5 cs5"
  # dur "0.01"

d1 $ slow 2 $ superimpose (slow 1.01) $ n ((+52) <$> "e4 fs4 b4 cs5 d5 fs4 e4 cs5 b4 fs4 d5 cs5")
  # s "xx"
  # dur "0.01"

-- Patterned parameters

d1 $ sound "[bd*2 cp, bd*3 [~ arpy]]"
  # delay "0.9"
  # delaytime (every 2 (density 2) "0.01 0.02 0.03")
  # delayfeedback "0.9"

-- Euclidean rhythms with superimposed offset

d1 $ slow 2 $ off 0.25 (# shape "0.8") $ sound "bd(3,8) mt:2(3,8,2)"

-- Striate for repeated grains

d1 $ slow 32 $ rev $ striate 64 $ sound "bev*8"

-- apply function to part of a pattern
d1 $ within (0,0.25) (density 2) $ loopAt 4 $ chop 16 $ sound "shakedown"

d1 $ within (0,0.25) (density 2 . (|*| speed "2")) $ loopAt 4 $ chop 16 $ sound "shakedown"

-- stacked effects

d1 $ stack [loopAt 2 $ sound "breaks125",
            sound "{arpy arpy:2*3}%1"
            # speed "0.5"
           ]
  # delay "[0 0.9]/2"
  # delaytime "0.02"
  # delayfeedback "0.9"

-- Woven effects
d1 $ weave 16 (speed (scale 1 1.2 sine1))
  [chop 16 $ sound "breaks125",
   sound "{arpy arpy:2*3}%1"
   # speed "0.5"
  ]
  # delay "[0 0.7]/2"
  # delaytime "0.02"
  # delayfeedback "0.9"

-- Patterning delaytime for melody

d1 $ stack [runWith 4 (density 2) $ jux ((# speed "1.5") . (0.5 <~) . (every 2 rev)) $ sound "odx [bd:2 sd8:3] tok*2 bd*2"
            # delay "0.95"
            # delaytime (every 2 (slow 2) $ slow 2 $ scale 0.01 0.02 sine1)
            # delayfeedback "0.85"
            # gain "0.8"
           ]
  # orbit "2"

